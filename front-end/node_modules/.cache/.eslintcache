[{"C:\\Users\\ibrah\\Desktop\\frontend\\front-end-app\\src\\index.tsx":"1","C:\\Users\\ibrah\\Desktop\\frontend\\front-end-app\\src\\reportWebVitals.ts":"2","C:\\Users\\ibrah\\Desktop\\frontend\\front-end-app\\src\\App.tsx":"3"},{"size":554,"mtime":1660128330741,"results":"4","hashOfConfig":"5"},{"size":425,"mtime":1660128330396,"results":"6","hashOfConfig":"5"},{"size":2083,"mtime":1660128388114,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14xp88",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},"C:\\Users\\ibrah\\Desktop\\frontend\\front-end-app\\src\\index.tsx",[],[],"C:\\Users\\ibrah\\Desktop\\frontend\\front-end-app\\src\\reportWebVitals.ts",[],[],"C:\\Users\\ibrah\\Desktop\\frontend\\front-end-app\\src\\App.tsx",["18"],[],"import axios from \"axios\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Button from \"@mui/material/Button\";\n\nfunction App() {\n  const [digimonName, setDigimonName] = useState(\"\");\n  const [digimonPic, setPicURL] = useState<undefined | any>(undefined);\n\n  const DIGIMON_BASE_API_URL = \"https://digimon-api.vercel.app/api/digimon\";\n  return (\n    <div style={{ color: \"blue\" }}>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h1 style={{ color: \"darkgreen\"}}> DIGIMON IMAGES </h1>\n      </div>\n      <div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <h2>Enter the digimon's name:</h2>\n        </div>\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <label>Examples: Koromon, Gabumon, Omnimon, Patamon </label>\n        </div>\n        <br></br>\n\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <input\n            type=\"text\"\n            id=\"digimon-name\"\n            name=\"digimon-name\"\n            onChange={(e) => setDigimonName(e.target.value)}\n          />\n          <br />\n          <Button onClick={searchForDigimon} variant=\"contained\">\n            Search\n          </Button>\n        </div>\n      </div>\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n        <h3>Digimon entered: {digimonName}</h3>\n      </div>\n      {digimonPic === undefined ? (\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}></div>\n      ) : (\n        <div\n          id=\"digimon-result\"\n          style={{ display: \"flex\", justifyContent: \"center\" }}\n        >\n          <img src={digimonPic} />\n        </div>\n      )}\n    </div>\n  );\n\n  function searchForDigimon() {\n    axios\n      .get(DIGIMON_BASE_API_URL + \"/name/\" + digimonName)\n      .then((res) => {\n        setPicURL(res.data[0].img);\n        console.log(res.data[0].img);\n      })\n      .catch((err) => {\n        setPicURL(\n          \"https://cdn3.iconfinder.com/data/icons/flat-actions-icons-9/792/Close_Icon_Dark-512.png\"\n        );\n      });\n  }\n}\n\nexport default App;\n",{"ruleId":"19","severity":1,"message":"20","line":48,"column":11,"nodeType":"21","endLine":48,"endColumn":35},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]